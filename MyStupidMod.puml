@startuml
class io.thedogofchaos.GregicAgrifactoryCore.block.OreCrop {
- {static} int maxAge
- int color
- Crop crop
+ <<Create>> OreCrop(Crop)
+ boolean isBonemealSuccess(Level,RandomSource,BlockPos,BlockState)
# ItemLike getBaseSeedId()
# IntegerProperty getAgeProperty()
+ int compareTo(OreCrop)
}


class io.thedogofchaos.GregicAgrifactoryCore.GregicAgrifactoryCore {
+ {static} String MODID
- {static} Logger LOGGER
+ <<Create>> GregicAgrifactoryCore()
- void commonSetup(FMLCommonSetupEvent)
- void clientSetup(FMLClientSetupEvent)
}
note top of io.thedogofchaos.GregicAgrifactoryCore.GregicAgrifactoryCore
 The value here should match an entry in the META-INF/mods.toml file
end note



class io.thedogofchaos.GregicAgrifactoryCore.Registry {
- {static} DeferredRegister<Block> BLOCKS
- {static} DeferredRegister<Item> ITEMS
- {static} DeferredRegister<Block> CROP_BLOCKS
- {static} DeferredRegister<Item> CROP_ITEMS
}
note left of io.thedogofchaos.GregicAgrifactoryCore.Registry::BLOCKS
 All the normal blocks and items go to the following two registers.
end note
note right of io.thedogofchaos.GregicAgrifactoryCore.Registry::CROP_BLOCKS
 These two registers are only for Crops, their seeds, their harvested items, and their essences.
end note

class io.thedogofchaos.GregicAgrifactoryCore.crops.Crop {
- ResourceLocation id
- Component displayName
- int maxCropAge
- int flowerColor
- int essenceColor
- int seedColor
- Supplier<? extends CropBlock> crop
- Supplier<? extends Item> essence
- Supplier<? extends ItemNameBlockItem> seeds
- Supplier<? extends Block> crux
- boolean enabled
- <<Create>> Crop()
+ ItemLike getId()
}


class io.thedogofchaos.GregicAgrifactoryCore.crops.Crop$Builder {
+ <<Create>> Builder()
}



io.thedogofchaos.GregicAgrifactoryCore.block.Comparable <|.. io.thedogofchaos.GregicAgrifactoryCore.block.OreCrop
net.minecraft.world.level.block.CropBlock <|-- io.thedogofchaos.GregicAgrifactoryCore.block.OreCrop
io.thedogofchaos.GregicAgrifactoryCore.crops.Crop +.. io.thedogofchaos.GregicAgrifactoryCore.crops.Crop$Builder
@enduml